plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id "maven-publish"
}

base {
    archivesName = project.mod_id + "-" + project.minecraft_version
}

version = project.mod_version + '-' + project.minecraft_version
group = project.maven_group

repositories {
    maven { url "https://maven.willbl.dev/releases" }
    maven { url "https://maven.ladysnake.org/releases" }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}")
    modImplementation include("xyz.amymialee:mialib:${project.mialib_version}")
    modImplementation include ("org.ladysnake.cardinal-components-api:cardinal-components-base:${project.cca_version}")
    modImplementation include ("org.ladysnake.cardinal-components-api:cardinal-components-entity:${project.cca_version}")
    modImplementation include ("org.ladysnake.cardinal-components-api:cardinal-components-scoreboard:${project.cca_version}")
}

loom {
    accessWidenerPath = file("src/main/resources/icyincitement.accesswidener")
}

fabricApi {
    configureDataGeneration() {
        modId = "icyincitement"
        client = true
    }
}

processResources {
    final Map<String, String> data = [mod_id : mod_id, version : version]
    inputs.properties(data)
    filesMatching("*.mod.json") {expand(data)}
    filesMatching("META-INF/*mods.toml") {expand(data)}
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = 'UTF-8'
    it.options.release = 21
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    archivesBaseName = project.mod_id
    withSourcesJar()
}

jar {
    from("LICENSE.md") {
        rename { "${it}_${base.archivesName.get()}"}
    }
}

publishing {
    publications { //noinspection GroovyAssignabilityCheck
        mavenJava(MavenPublication) { //noinspection GroovyAssignabilityCheck
            from components.java
        }
    }
    repositories {
        maven {
            name = "willBlRepositoryReleases"
            url = "https://maven.willbl.dev/releases"
            credentials(PasswordCredentials)
            authentication { //noinspection GroovyAssignabilityCheck
                basic(BasicAuthentication)
            }
        }
    }
}